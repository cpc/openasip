minidebug : entity work.minidebugger
  generic map (
    data_width_g      => 32,
    axi_addr_width_g  => axi_addr_width_g,
    core_count_g      => core_count_g,
    core_id_width_g   => dbg_core_sel_width_c,
    imem_data_width_g    => imem_data_width_g,
    imem_addr_width_g    => imem_addr_width_g,
    dmem_data_width_g    => dmem_data_width_g,
    dmem_addr_width_g    => dmem_addr_width_g,
    pmem_data_width_g    => pmem_data_width_g,
    pmem_addr_width_g    => local_mem_addrw_g,
    reserved_sp_bytes_g  => reserved_sp_bytes_g,
    axi_offset_low_g     => axi_offset_low_g,
    axi_offset_high_g    => axi_offset_high_g
  ) port map (
    clk               => clk,
    rstx              => rstx,

    avalid_in         => ctrl_avalid,
    aready_out        => ctrl_aready,
    aaddr_in          => axi_aaddr,
    awren_in          => axi_awren,
    astrb_in          => axi_astrb,
    adata_in          => axi_adata,
    rvalid_out        => ctrl_rvalid,
    rready_in         => ctrl_rready,
    rdata_out         => ctrl_rdata(dataw_c-1 downto 0),
    core_sel_in       => ctrl_core_sel,

    tta_locked_in     => core_busy,
    tta_lockrq_out    => core_db_lockrq,
    tta_nreset_out    => tta_nreset,
    tta_pc_in         => core_db_pc,
    tta_lockcnt_in    => core_db_lockcnt,
    tta_cyclecnt_in   => core_db_cyclecnt
  );

core_db_tta_nreset <= tta_nreset;
rdata_broadcast : for I in 1 to core_count_g-1 generate
  ctrl_rdata((I+1)*dataw_c-1 downto I*dataw_c)
      <= ctrl_rdata(dataw_c-1 downto 0);
end generate rdata_broadcast;

/*
    Copyright (c) 2002-2009 Tampere University.

    This file is part of TTA-Based Codesign Environment (TCE).

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
 */
/**
 * @file EditPart.icc
 *
 * Inline implementation of EditPart class.
 *
 * @author Ari Metsähalme 2004 (ari.metsahalme-no.spam-tut.fi)
 * @note rating: yellow
 * @note reviewed Jul 13 2004 by vpj, ll, jn, am
 */

#include "Application.hh"

/**
 * Returns the parent of this EditPart.
 *
 * @return Parent of this EditPart.
 */
inline EditPart*
EditPart::parent() const {
    return parent_;
}

/**
 * Sets the parent EditPart.
 *
 * @param parent New parent.
 */
inline void
EditPart::setParent(EditPart* parent) {
    parent_ = parent;
}

/**
 * Returns the model object corresponding to this EditPart.
 *
 * @return The model object corresponding to this EditPart.
 */
inline TTAMachine::MachinePart*
EditPart::model() const {
    return model_;
}

/**
 * Sets the corresponding model object.
 *
 * @param model New model object.
 */
inline void
EditPart::setModel(TTAMachine::MachinePart* model) {
    model_ = model;
}

/**
 * Returns the Figure of this EditPart.
 *
 * @return Figure of this EditPart.
 */
inline Figure*
EditPart::figure() const {
    return figure_;
}

/**
 * Sets the Figure.
 *
 * @param figure New Figure.
 */
inline void
EditPart::setFigure(Figure* figure) {
    figure_ = figure;
}

/**
 * Tells whether the EditPart is selectable or not.
 *
 * @return True if selectable, false otherwise.
 */
inline bool
EditPart::selectable() const {
    return selectable_;
}

/**
 * Tells if the EditPart is selected.
 *
 * @return True if selected.
 */
inline bool
EditPart::selected() const {
    return selected_;
}

/**
 * Sets selectability of the EditPart.
 *
 * @param selectable True if selectable, false otherwise.
 */
inline void
EditPart::setSelectable(bool selectable) {
    selectable_ = selectable;
}

/**
 * Sets selection status of the EditPart.
 *
 * @param select True to select, false to unselect.
 */
inline void
EditPart::setSelected(bool select) {
    selected_ = select;
}

/**
 * Returns the number of children.
 *
 * @return The number of child EditParts.
 */
inline int
EditPart::childCount() const {
    return children_.size();
}

/**
 * Returns the child corresponding to the given index.
 *
 * @param index Index of the child EditPart to return
 * @return The child corresponding to the given index.
 */
inline EditPart*
EditPart::child(unsigned int index) const {
    assert(index < children_.size());
    return children_[index];
}

/*
    Copyright (c) 2002-2009 Tampere University.

    This file is part of TTA-Based Codesign Environment (TCE).

    Permission is hereby granted, free of charge, to any person obtaining a
    copy of this software and associated documentation files (the "Software"),
    to deal in the Software without restriction, including without limitation
    the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
    DEALINGS IN THE SOFTWARE.
 */
/**
 * @file EditPolicyFactory.icc
 *
 * Inline implementation of EditPolicyFactory class.
 *
 * @author Veli-Pekka J‰‰skel‰inen 2005 (vjaaskel-no.spam-cs.tut.fi)
 * @note rating: red
 */

#include "Application.hh"

/**
 * Creates edit policies for function units.
 *
 * @return Function unit edit policy.
 */
inline EditPolicy*
EditPolicyFactory::createFUEditPolicy() {
    return NULL;
}

/**
 * Creates edit policies for register files.
 *
 * @return Register file edit policy.
 */
inline EditPolicy*
EditPolicyFactory::createRFEditPolicy() {
    return NULL;
}

/**
 * Creates edit policies for immediate units.
 *
 * @return Immediate unit edit policy.
 */
inline EditPolicy*
EditPolicyFactory::createIUEditPolicy() {
    return NULL;
}

/**
 * Craetes edit policy for global control unit.
 *
 * @return Global control unit edit policy.
 */
inline EditPolicy*
EditPolicyFactory::createGCUEditPolicy() {
    return NULL;
}

/**
 * Craetes edit policies for function unit ports.
 *
 * @return Function unit port edit policy.
 */
inline EditPolicy*
EditPolicyFactory::createFUPortEditPolicy() {
    return NULL;
}

/**
 * Creates edit policies for register file ports.
 *
 * @return Register file port edit policy.
 */
inline EditPolicy*
EditPolicyFactory::createRFPortEditPolicy() {
    return NULL;
}

/**
 * Creates edit policies for immediate unit ports.
 *
 * @return Immediate unit port edit policy.
 */
inline EditPolicy*
EditPolicyFactory::createIUPortEditPolicy() {
    return NULL;
}

/**
 * Creates edit policies for special register ports of control units.
 *
 * @return Special register port edit policy.
 */
inline EditPolicy*
EditPolicyFactory::createSRPortEditPolicy() {
    return NULL;
}

/**
 * Creates edit policies for sockets.
 *
 * @return Socket edit policy.
 */
inline EditPolicy*
EditPolicyFactory::createSocketEditPolicy() {
    return NULL;
}

/**
 * Creates edit policies for bus sergments.
 *
 * @return Segment edit policy.
 */
inline EditPolicy*
EditPolicyFactory::createSegmentEditPolicy() {
    return NULL;
}

/**
 * Creates edit policies for bridges.
 *
 * @return Bridge edit policy.
 */
inline EditPolicy*
EditPolicyFactory::createBridgeEditPolicy() {
    return NULL;
}

/**
 * Creates edit policies for buses.
 *
 * @return Bus edit policy.
 */
inline EditPolicy*
EditPolicyFactory::createBusEditPolicy() {
    return NULL;
}

/**
 * Creates port edit policies for ports.
 *
 * @return Port edit policy.
 */
inline EditPolicy*
EditPolicyFactory::createPortEditPolicy() {
    return NULL;
}

# configure.ac for TCE project
# Process this file with autoconf to produce a configure script.

# Mandatory macro. Set the name of the package and the version number.
# Email address is for bug reporting. 
AC_INIT([tce],[1.14-pre],[tce-users@cs.tut.fi])

# Get the current revision number so we can print it out in
# tce-config --version
REVNO=$(which bzr > /dev/null && bzr revno >/dev/null 2>&1 && echo "-r" | tr -d "\n" && bzr revno 2>/dev/null || echo "" | tr -d "\n")


AC_SUBST([VERSION_STRING], ["$PACKAGE_VERSION${REVNO}"] )

# TCE 1.1 = 1:0:0
# TCE 1.2 = 2:0:0 (unsure if 100% API compatible with 1.1)
# TCE 1.3 = 3:0:0 (some API changes at least in the simulator)
# TCE 1.4 = 4:0:0
# TCE 1.5 = 5:0:0
# TCE 1.6 = 6:0:0
# TCE 1.7 = 7:0:0
# TCE 1.8 = 8:0:0
# TCE 1.9 = 9:0:0
# TCE 1.10 = 10:0:0
# TCE 1.11 = 11:0:0
# TCE 1.12 = 12:0:
# TCE 1.13 = 13:0:0
# TCE 1.14 = 14:0:0
AC_SUBST([LIB_VERSION], ["14:0:0"])

# This indicates a unique source code file. This is a safety check
# which ensures that source code directory is really source code
# directory.
AC_CONFIG_SRCDIR([src/base/tpef/SafePointer.hh])

# Later libtools (2.x?) whine in case this is not present:
AC_CONFIG_MACRO_DIR([m4])

# This tells AC_OUTPUT to create config.h file that includes
# #define statements generated by configure script.
AC_CONFIG_HEADERS(tce_config.h)

# Header file should have the same protection
# against multiple definitions as any other file.
# These are written in the beginning and in the
# end of header file.
AH_TOP([
#ifndef TCE_CONFIG_H
#define TCE_CONFIG_H
])
AH_BOTTOM([
#endif
])

# This macro does several things that are necessary for the 
# proper automake functioning.
# See http://noisebleed.blogetery.com/2010/02/27/tar-file-name-is-too-long-max-99/#howtofixit
AM_INIT_AUTOMAKE([1.9 tar-pax])
#
# Platform specific setup
#
#############################
AC_CANONICAL_HOST
# Check for which host we are on and setup a few things
# specifically based on the host
AM_CONDITIONAL([DARWIN_HOST_OS], false)
case $host_os in
  darwin* )
    AM_CONDITIONAL([DARWIN_HOST_OS], true)
    AC_SUBST([LIBRARY_SUFFIX], [".dylib"] )
    AC_SUBST([CXXFLAGS], ["$CXXFLAGS -arch $host_cpu"])
    AC_SUBST([LDFLAGS], ["$LDFLAGS -arch $host_cpu"])    

         ;;
  *)
    #Default Case
    AC_SUBST([LIBRARY_SUFFIX], [".so"] )
         ;;
esac

#######################
# CHECKS FOR PROGRAMS #
#######################

# Test whether user gave CXXFLAGS or not.
if test -z "$CXXFLAGS"
then
  CXXFLAGS_GIVEN="no"
else
  CXXFLAGS_GIVEN="yes"
fi

# set SHARED_CXX_FLAGS, if it is not set already
if test -z "$SHARED_CXX_FLAGS"
then
   case $host_os in
     darwin* )
          # Pass selected host architecture to plugin building as well.
          AC_SUBST([SHARED_CXX_FLAGS], ["-flat_namespace -bundle -undefined dynamic_lookup -arch $host_cpu -fPIC"])
            ;;
     *)
          AC_SUBST([SHARED_CXX_FLAGS], ["-lgcc -shared -g -fPIC -Wno-deprecated"])
            ;;
    esac
fi

# Determine which C++ compiler to use. If CXX is not set,
# sets CXX to the compiler found.
AC_PROG_CXX

AC_DEFINE_UNQUOTED([SHARED_CXX_FLAGS], ["$SHARED_CXX_FLAGS"],
                   [Flags used for shared object compilation])
AC_DEFINE_UNQUOTED([CXX], ["$CXX"],
                   [c++ compiler used])

# Determine which C compiler to use. If CC is not already set,
# sets output variable CC to the compiler found.
AC_PROG_CC

# If bison is found, set output variable YACC to bison -v.
# No need for bison yet.
#AC_PROG_YACC

# If flex is found, set output variable LEX to flex and
# LEXLIB to -lfl. Otherwise set LEX to lex and LEXLIB to -ll.
# No need for lex yet.
#AM_PROG_LEX

# If make predefines the Make variable MAKE, define output
# variable SET_MAKE to be empty. Otherwise, define SET_MAKE
# to MAKE=make.
AC_PROG_MAKE_SET

# Set output variable INSTALL to the path of BSD-compatible
# install program, if such is found from PATH. Otherwise it
# uses install-sh to determine install program.
AC_PROG_INSTALL

# Disable building the static libraries by default. Should halve the
# number of compilations.
AC_DISABLE_STATIC

# Declare that we use libtool.
AC_PROG_LIBTOOL
AM_PROG_LIBTOOL

# Declare that we use egrep.
AC_PROG_EGREP

lt_objdir=$lt_cv_objdir
AC_SUBST(lt_objdir)

# Check for latex and latex2html executables.
AC_CHECK_PROG([LATEX], [latex], [yes], [no], [], [])
AC_CHECK_PROG([LATEX2HTML], [latex2html], [yes], [no], [], [])

if test x$LATEX = xyes
  then if test x$LATEX2HTML = xyes
    then MAKEMANUALS=true
  fi
fi

# Do not create manuals if latex or latex2html are not available
AM_CONDITIONAL([MANUALS], test x$MAKEMANUALS = xtrue)

AX_PTHREAD()

# Checks whether compiler supports vector at() operation. It is a known
# fact that gcc 2.95.4 lacks support for this feature. If compiler 
# supports this VECTOR_AT_SUPPORTED is set to 1.
AC_LANG_CONFTEST(
[AC_LANG_PROGRAM(
  [[#include <vector>]
  [using std::vector;]],
  [[vector<int> foo;]
  [foo.push_back(1);]
  [int l = foo.at(0);]])
])

AC_MSG_CHECKING([whether compiler understands vector at() method])
# temporary file
VECTORTEST=vectortest123456

$CXX conftest.c 2> $VECTORTEST

if test -s $VECTORTEST
then
  AC_MSG_RESULT([no])
else
  AC_MSG_RESULT([yes])
  AC_DEFINE(VECTOR_AT_SUPPORTED, 1, 
    [defines whether compiler supports vector at() method])
fi

rm -rf $VECTORTEST

# Check for clang or tce-llvm-gcc executables. 
AC_CHECK_PROG([TCELLVMGCC], [tce-llvm-gcc], [yes], [], [], [])
AC_CHECK_PROG([CLANG], [clang], [yes], [], [], [])
AM_CONDITIONAL([COMPILER_FOUND], test ! -z $CLANG)

AC_SUBST([CLANG_AS_DEFAULT], ["True"])

# === find the best implementation for unordered_map/hash_map ===

HASHMAP_TEST=hashmaptest123456

AC_MSG_CHECKING([whether std::hash_map is available])

AC_LANG_CONFTEST(
   [AC_LANG_PROGRAM(
    [[#include <hash_map>]
     [using std::hash_map;]],
   [hash_map<const char*, int> months;])
])

rm -f $HASHMAP_TEST
if $CXX $CXXFLAGS -Wno-deprecated conftest.c -c > /dev/null 2>&1;
then
   AC_MSG_RESULT([yes])
   AC_DEFINE(HASHMAP_STD, 1, 
             [defines whether hash map is provided in namespace std])
else
   AC_MSG_RESULT([no])
fi

AC_MSG_CHECKING([whether std::unordered_map/hash_map is available])
AC_LANG_CONFTEST(
                 [AC_LANG_PROGRAM(
                  [[#include <unordered_map>]
                   [using std::unordered_map;]],
                   [[]])
                  ])

rm -f $HASHMAP_TEST
if $CXX $CXXFLAGS -Wno-deprecated conftest.c -c > /dev/null 2>&1 ;
then
   AC_MSG_RESULT([yes])
   AC_DEFINE(STD_UNORDERED_MAP, 1, 
             [defines whether std unordered map is provided])
else
   AC_MSG_RESULT([no])
fi

AC_MSG_CHECKING([whether std::tr1::unordered_map/hash_map is available])
AC_LANG_CONFTEST(
                 [AC_LANG_PROGRAM(
                  [[#include <tr1/unordered_map>]
                   [using std::tr1::unordered_map;]],
                   [[]])
                  ])

rm -f $HASHMAP_TEST
if $CXX $CXXFLAGS -Wno-deprecated conftest.c -c > /dev/null 2>&1 ;
then
   AC_MSG_RESULT([yes])
   AC_DEFINE(STD_TR1_UNORDERED_MAP, 1, 
             [defines whether std tr1 unordered map is provided])
else
   AC_MSG_RESULT([no])
fi

AC_MSG_CHECKING([whether __gnu_cxx::hash_map is available])
AC_LANG_CONFTEST(
                 [AC_LANG_PROGRAM(
                  [[#include <ext/hash_map>]
                   [using __gnu_cxx::hash_map;]],
                   [[hash_map<const char*, int> foo;]])
                  ])

rm -f $HASHMAP_TEST
if $CXX $CXXFLAGS -Wno-deprecated conftest.c -c > /dev/null 2>&1 ;
then
   AC_MSG_RESULT([yes])
   AC_DEFINE(GNU_EXT_HASHMAP, 1, 
             [defines whether GNU ext hash_map is provided])
else
   AC_MSG_RESULT([no])
fi


# CXXFLAGS is set if gcc is in use and user has not given CXXFLAGS.
if test x$CXXFLAGS_GIVEN = xno
then
  if test -n "$($CXX -v 2>&1 | grep gcc)"
  then
    CXXFLAGS="-O3 -W -Wall -pedantic -Wno-long-long -g -Wno-variadic-macros "
  fi 
  # Checks whether compiler supports -Wno-system-headers.
  FLAGTEST=flagtest_temp
  AC_LANG_CONFTEST([AC_LANG_PROGRAM([[]],[[]])])

  AC_MSG_CHECKING([whether compiler understands -Wno-system-headers flag])

  $CXX -Wno-system-headers conftest.c 2> $FLAGTEST

  if test -s $FLAGTEST
  then
    AC_MSG_RESULT([no])
  else
    AC_MSG_RESULT([yes])
    CXXFLAGS="$CXXFLAGS -Wno-system-headers"
  fi

  rm -rf $FLAGTEST
fi

# Check whether CXX supports -rdynamic option.
AC_LANG_CONFTEST(
[AC_LANG_PROGRAM(
  [])
])

RDYNAMICTEST=rdynamictest13224
$CXX -rdynamic conftest.c 2> $RDYNAMICTEST

AC_MSG_CHECKING([whether compiler supports -rdynamic])
if test -s $RDYNAMICTEST
then
  DYNAMIC=false
  AC_MSG_RESULT([no])
else
  DYNAMIC=true
  AC_MSG_RESULT([yes])
  AC_SUBST([DYNAMIC_FLAG], ["-rdynamic"])
fi

AM_CONDITIONAL([HAVE_RDYNAMIC], [test x$DYNAMIC = xtrue])

rm -rf $RDYNAMICTEST

# Check whether directory separator is \ or /
AC_PREPROC_IFELSE(
[
[[
#if defined(_WIN32) || defined(__WIN32__) || defined(WIN32) || defined(__CYGWIN__)
][
#error "windows detected"
][
#endif
]]
],
[
AC_MSG_CHECKING([for directory separator])
AC_MSG_RESULT([/])
AC_DEFINE([DIR_SEPARATOR], ["/"], [Directory separator for this file system])
],
[
AC_MSG_CHECKING([for directory separator])
AC_MSG_RESULT([\\])
AC_DEFINE([DIR_SEPARATOR], ["\\"], [Directory separator for this file system])
]
)

########################
# CHECKS FOR LIBRARIES #
########################


##########################################################################
#
# With this switch user can define the compilation flags that make the
# programs generate gcov profiling data.
#
##########################################################################
AC_ARG_WITH(gcov,
[AS_HELP_STRING([--with-gcov],[use gcov switches in compilation to produce \
profiling data])],
[
CXXFLAGS="$CXXFLAGS -ftest-coverage -fprofile-arcs"
]
)

####################################################################
#
# Python 2.x for the tcecc compiler driver script.
#
####################################################################
AC_MSG_CHECKING(for python binary)
AC_MSG_RESULT([])
for python in python2.9 python2.8 python2.7 python2.6 python2.5 python2.4 python2.3 python2.2 python2.1 python; do
AC_CHECK_PROGS(PYTHON_BIN, [$python])
ax_python_bin=$PYTHON_BIN
if test x$ax_python_bin != x; then
   break;
fi
done

if test x$PYTHON_BIN == x; then
   AC_MSG_ERROR([Python 2.x not found.])
fi

PYTHON_VERSION=`$PYTHON_BIN --version 2>&1 | cut -d ' ' -f 2 | cut -d '.' -f 1,2`

case "$PYTHON_VERSION" in
     2.*)
     AC_DEFINE([PYTHON_2], [], "Using Python 2.x")
     ;;
     *)
     AC_MSG_NOTICE([Python version: $PYTHON_VERSION])
     AC_MSG_ERROR([Python 2.x not found.])
esac

####################################################################
#
# LLVM is needed for the LLVM-based compiler.
#
# If not found, LLVM-based compiler is disabled and TTA programs can
# be defined only in assembly or with the old gcc 2.7.0 compiler.
#
# Following variables are defined:
#
# LLVM_VERSION          Version of LLVM. This is set empty in case LLVM not 
#                       found.
# LLVM_CPPFLAGS         C preprocessor flags for files that include LLVM 
#                       headers.
# LLVM_LDFLAGS          Libraries needed to link against LLVM components.
#
# LLVM_LIBDIR           The directory where LLVM libraries are located.
#
# LLVM_BINDIR           The location of LLVM binaries.
#
####################################################################

####################################################################

# Always enable C++11 language standard.
ENABLE_CXX11=true

LLVM_VERSION=

AC_ARG_WITH(llvm,
[AS_HELP_STRING([--with-llvm],[absolute path to an LLVM installation])],
[llvmDir="${withval}"
 llvmConf="$llvmDir/bin/llvm-config"
],
[llvmDir=""
AC_PATH_PROGS([LLVM_CONFIG], [llvm-config llvm-config-3.5 llvm-config-3.4 llvm-config-3.3 llvm-config-3.2 ])
llvmConf=$LLVM_CONFIG
]
)

if test x"$llvmConf" == x; then
AC_MSG_NOTICE([
  Cannot find LLVM installation. Either LLVM is not
  installed at all or development support for it is missing. On certain
  systems, development support comes in separate '-dev' packages.])
else

AC_CHECK_FILE($llvmConf, 
[
LLVM_VERSION=$($llvmConf --version)
LLVM_LIBDIR=$($llvmConf --libdir)
LLVM_BINDIR=$($llvmConf --bindir)
LLVM_SHARED_LIB=-lLLVM-$LLVM_VERSION
LLVM_SHARED_LIB_FILE=$LLVM_LIBDIR/libLLVM-$LLVM_VERSION$LIBRARY_SUFFIX
LLVM_CPPFLAGS=$($llvmConf --cppflags)
LLVM_LDFLAGS="$($llvmConf --ldflags) $LLVM_SHARED_LIB"
LLVM_INCLUDEDIR=$($llvmConf --includedir)
LLVM_RTTI_CHECK=$($llvmConf --cxxflags | grep -i "\-fno-rtti")
LLVM_TCE_PATCHES=$($llvmConf --tce-patches 2>&1)

if test x"$LLVM_RTTI_CHECK" != x; then
AC_MSG_ERROR([Your LLVM was not built with RTTI. You should rebuild LLVM with 'make REQUIRES_RTTI=1'. See TCE's INSTALL file for more information.])
fi

# Add LLVM libdir into the Darwin RPATH
case $host_os in
  darwin* )
  LLVM_LDFLAGS="$LLVM_LDFLAGS -rpath $LLVM_LIBDIR"
  ;;
esac

# Hack for debian sid packages
if test x"$LLVM_INCLUDEDIR" == x/usr/include/llvm; then
LLVM_INCLUDEDIR=/usr/include
fi

case "$LLVM_VERSION" in
     3.5*)
     AC_DEFINE([LLVM_3_5], [], "Using LLVM 3.5")
     LLVM_OLDER_THAN_3_6=1
     LLVM_OLDER_THAN_3_7=1
     LLVM_OLDER_THAN_3_8=1
   ;;
     3.6*)
     AC_DEFINE([LLVM_3_6], [], "Using LLVM 3.6")
     LLVM_OLDER_THAN_3_7=1
     LLVM_OLDER_THAN_3_8=1
   ;;
     3.7*)
     AC_DEFINE([LLVM_3_7], [], "Using LLVM 3.7")
     LLVM_OLDER_THAN_3_8=1
   ;;
     3.8*)
     AC_DEFINE([LLVM_3_8], [], "Using LLVM 3.8")
   ;;
     *)
   AC_MSG_NOTICE(
   [
Unsupported LLVM version. 
   ])
   LLVM_VERSION=
   ;;
esac
],

[
AC_MSG_NOTICE([
  You have to install LLVM to be able to compile from C.])
])

if test "x$LLVM_OLDER_THAN_3_6" == "x1";
then
AC_DEFINE_UNQUOTED(LLVM_OLDER_THAN_3_6, 1, [LLVM version is older than 3.6])
fi

if test "x$LLVM_OLDER_THAN_3_7" == "x1";
then
AC_DEFINE_UNQUOTED(LLVM_OLDER_THAN_3_7, 1, [LLVM version is older than 3.7])
fi

if  test "x$LLVM_OLDER_THAN_3_8" == "x1";
then
AC_DEFINE_UNQUOTED(LLVM_OLDER_THAN_3_8, 1, [LLVM version is older than 3.8])
fi

AM_CONDITIONAL([LLVM_OLDER_THAN_3_7], test ! -z $LLVM_OLDER_THAN_3_7)
AM_CONDITIONAL([LLVM_3_7_OR_NEWER], test -z $LLVM_OLDER_THAN_3_7)

if test ! -e $LLVM_SHARED_LIB_FILE;
then
  # Try the alternative location where llvm.org/apt packages install it.
  LLVM_SHARED_LIB_FILE=/usr/lib/x86_64-linux-gnu/libLLVM-$LLVM_VERSION$LIBRARY_SUFFIX
  if test ! -e $LLVM_SHARED_LIB_FILE;
  then
        AC_MSG_ERROR([
$LLVM_SHARED_LIB_FILE not found. 
Either recompile and install LLVM after ./configure --enable-shared
or use ./gen_llvm_shared_lib.sh to generate it.])

  fi
fi

# test if $llvmConf is empty string
fi

AC_DEFINE_UNQUOTED([LLVM_VERSION], ["$LLVM_VERSION"], 
"The LLVM version string.")

AC_SUBST([LLVM_VERSION], ["$LLVM_VERSION"])
AC_SUBST([LLVM_CPPFLAGS], ["$LLVM_CPPFLAGS"])
AC_SUBST([LLVM_LDFLAGS], ["$LLVM_LDFLAGS"])
#These are defined by llvm-config.h:
#AC_SUBST([LLVM_LIBDIR], ["$LLVM_LIBDIR"])
AC_SUBST([LLVM_INCLUDE_DIR], ["$LLVM_INCLUDEDIR"])
AC_SUBST([LLVM_BINDIR], ["$LLVM_BINDIR"])
AC_SUBST([LLVM_CONFIG], ["$llvmConf"])

AC_DEFINE_UNQUOTED([LLVM_CPPFLAGS], ["$LLVM_CPPFLAGS"],
                   [LLVM compile flags.])

AC_DEFINE_UNQUOTED([LLVM_LDFLAGS], ["$LLVM_LDFLAGS"],
                   [LLVM linkage flags.])
AC_DEFINE_UNQUOTED([LLVM_INCLUDE_DIR], ["$LLVM_INCLUDEDIR"],
                   [Directory containing LLVM headers.])
#These are defined by llvm-config.h:
#
#AC_DEFINE_UNQUOTED([LLVM_LIBDIR], ["$LLVM_LIBDIR"],
#                   [Directory containing LLVM libraries.])

AM_CONDITIONAL(LLVM, test x$LLVM_VERSION != x)

####################################################################
#
# wxWidgets is a cross-platform GUI library used in TCE.
#
# It's not required but without it any GUIs of the project won't
# compile. 
#
# GUI_LIBS and GUI_INCLUDES are set to point to wxWidgets
# installation and DO_WX_COMPILE is set to "yes" if
# a wxWidgets installation is found.
#
####################################################################

AC_ARG_WITH(wxwidgets,
[AS_HELP_STRING([--with-wxwidgets],[absolute path to wxWidgets library])],
[wxwindows="${withval}"
 wxwindowsBin="$wxwindows/bin/wx-config"
],
[wxwindows=""
 wxwindowsBin="$(which wx-config)"
]
)

# Test if $wxwindowsBin is empty - in that case, we can't even determine if
# or what version of wxWidgets library is installed, so skip all tests.
if test x"$wxwindowsBin" == x; then
AC_MSG_NOTICE([
  Cannot test the wxWidgets configuration. Either wxWidgets library is not
  installed at all or development support for it is missing. On certain
  systems, development support comes in separate '-dev' packages.])
else
 
# Test the existing installation of wxWindows library.
AC_CHECK_FILE($wxwindowsBin, 
[
GUI_LIBS="$GUI_LIBS $($wxwindowsBin --libs)"
GUI_INCLUDES="$GUI_INCLUDES $($wxwindowsBin --cxxflags)"

# if wx-config is found and the version is 2.4.*, conditional
# WX is set.
case "$($wxwindowsBin --version)" in
     2.6.* | 2.8.* | 2.9.* | 3.0.*)
   DO_WX_COMPILE=true
   ;;
     *)
   DO_WX_COMPILE=false
   AC_MSG_NOTICE(
   [
    wxWidgets version must be 2.6.*, 2.8.* or 3.0.* in order to
    build graphical user interfaces.
   ])
   ;;
esac

# test if there is any graphical library under wxWidgets
wxBasename="$($wxwindowsBin --basename)"
if test "$wxBasename" = ""; then
   DO_WX_COMPILE=false
   AC_MSG_NOTICE(
   [
    wxWidgets must have a graphical backend such as wx_gtk2
   ])
fi

],

[
AC_SUBST([GUI_LIBS])
AC_SUBST([GUI_INCLUDES])
AC_MSG_NOTICE([
  You have to install wxWidgets library in order to make graphical
  applications work.])
DO_WX_COMPILE=false
])

# test if $wxwindowsBin is empty string
fi

# Add wxWidgets includes to CPPFLAGS temporarily to make the following
# tests work. 
oldCPPFLAGS=${CPPFLAGS}
CPPFLAGS=${GUI_INCLUDES}
TEMP_LIBS=${LIBS}
LIBS=${GUI_LIBS}

AC_LANG(C++)
# check that wx headers are really found
if test x$DO_WX_COMPILE = xtrue
then
  AC_MSG_CHECKING([if wx headers are found and library linkage works])
  AC_RUN_IFELSE(
  [AC_LANG_PROGRAM(
  [[
   #include <wx/wx.h>
   wxRect retWx() {return wxRect();}
  ]],
  [[
   ;
  ]])],
  [AC_MSG_RESULT([yes])],
  [
    AC_MSG_NOTICE([Problems in wx. Check for config.log for more information.])
    DO_WX_COMPILE=false
  ]
  )
fi
AC_LANG(C)
LIBS=${TEMP_LIBS}

if test x$DO_WX_COMPILE = xtrue
then
  AC_MSG_CHECKING([if wxWidgets is compiled with printing framework.])
  AC_PREPROC_IFELSE(
   [
[[
#include <wx/setup.h>
][
#if !(wxUSE_PRINTING_ARCHITECTURE == 1)
][
#error "wxWidgets printing architecture disabled."
][
#endif
]]
],
[
  AC_MSG_RESULT([yes])
  AC_MSG_CHECKING([if wxWidgets contains the font size bug in canvas printing.])
  AC_PREPROC_IFELSE(
   [
[[
#include <wx/setup.h>
#include <wx/version.h>
][
#if !wxCHECK_VERSION(2,4,3) && defined(__WXGTK20__)
][
#error "wxWidgets font size bug in canvas printing detected."
][
#endif
]]
],
[
  AC_MSG_RESULT([no])
],
[
  AC_MSG_RESULT([yes])
  AC_DEFINE(WX_PRINTING_FONT_SIZE_BUG, 1,
[wxWidget versions prior to 2.4.3 have a bug in printing canvas with text, \
making the printout font size about 10x smaller than it should be. This macro \
is used to find out if a workaround is needed to print the text correctly.])
])

],
[
  AC_MSG_RESULT([no])
  AC_DEFINE(WX_PRINTING_DISABLED, 1,
[wxWidget library can be compiled without printing framework. If printing \
framework is not supported, this macro is set to 1.])

]) # test for printing framework

fi

CPPFLAGS=${oldCPPFLAGS}

# If some of the wxWidgets tests failed, clean previously stored
# GUI_LIBS and GUI_INCLUDES with partial information.

if test x$DO_WX_COMPILE = xfalse
then
  GUI_LIBS=""
  GUI_INCLUDES=""
  AC_SUBST([GUI_LIBS])
  AC_SUBST([GUI_INCLUDES])
fi

case $host_os in
  darwin* )
    # No wxWidgets compatible with TCE 1.2 on Darwin
    GUI_LIBS=""
    GUI_INCLUDES=""
    AC_SUBST([GUI_LIBS])
    AC_SUBST([GUI_INCLUDES])
    #     DO_WX_COMPILE=false
    AC_MSG_NOTICE(
    [
    wxWidgets present on Mac OSX may not be compatible with the TCE.
    ])    
    ;;
   *)
   ;;
esac
AM_CONDITIONAL(WX, test x$DO_WX_COMPILE = xtrue)
####################################################################
#
# Check TCL.. TODO: replace with ready macro if possible.
#
####################################################################

# If tcl is not in standard path, its location can be given with
# --with-tcl=<path>.
AC_ARG_WITH(tcl,
[AS_HELP_STRING([--with-tcl],[absolute path where tcl is found])],
[
  tcl="${withval}" 
  AC_SUBST([TCL_INCLUDES], ["-I$tcl/include"] )
  AC_SUBST([TCL_LIBDIR], ["-L$tcl/lib"])
], 
[
  tcl=""
]
)

TEMP_CPPFLAGS="$CPPFLAGS"
TEMP_LDFLAGS="$LDFLAGS"
if test -n "$tcl"; then
  LDFLAGS="$LDFLAGS -L$tcl/lib"
  CPPFLAGS="$CPPFLAGS -I$tcl/include"
fi

# If Tcl headers are not in standard path, the path to them can be given
# with --with-tcl-headers=<path>.  For example, in Debian the headers for
# Tcl 8.4 are located at /usr/include/tcl8.4
AC_ARG_WITH(tcl-headers,
[AS_HELP_STRING([--with-tcl-headers],[absolute path where tcl include files are found, e.g, /usr/include/tcl8.4])],
[
  tcl_headers="${withval}" 
  AC_SUBST([TCL_INCLUDES], ["-I$tcl_headers"] )
], 
[
  tcl_headers=`ls -1d /usr/include/tcl{8.6,8.4,8.3,8.2,8.1,8.0} 2>/dev/null|head -n 1`
]
)

if test -n "$tcl_headers"; then
  CPPFLAGS="$CPPFLAGS -I$tcl_headers"
  AC_SUBST([TCL_INCLUDES], ["-I$tcl_headers"] )
fi

# Check Tcl version. 
AC_MSG_CHECKING([tcl version])
AC_PREPROC_IFELSE(
[[
#include <tcl.h>
][
#if TCL_MAJOR_VERSION < 8
][
#error tcl major version is lower than 8
][
#endif
][
#if TCL_MINOR_VERSION == 5
][
#warning tcl minor version is equal to 5, Proxim won't work 
][
#endif
]],
[
# Program to get the used tcl version.
  AC_LANG_CONFTEST(
  [AC_LANG_PROGRAM(
  [[
  #include <stdio.h>
  ][
  #include <tcl.h>
  ]],
  [[
  printf(TCL_VERSION"\n");
  ]])])
  $CC $CPPFLAGS -o tclversiontest conftest.c
  TCL_VERSION=`./tclversiontest`
  rm -f ./tclversiontest
  AC_MSG_RESULT([yes ($TCL_VERSION)])
  TCL=true
  TEMP_LIBS=$LIBS
  AC_SEARCH_LIBS([Tcl_SetVar], [tcl$TCL_VERSION] [tcl${TCL_VERSION:0:1}${TCL_VERSION:2:1}] [tcl${TCL_VERSION:0:1}] [tcl])
  AC_SUBST([TCL_LD_FLAGS], [$LIBS])
  TCL_LIB="$TCL_LD_FLAGS"
  AC_MSG_CHECKING([whether $TCL_LIB is available to linker])
  AC_RUN_IFELSE(
  [AC_LANG_PROGRAM(
  [[
   #include <tcl.h>
  ]],
  [[
   Tcl_CreateInterp()
  ]])],
  [AC_MSG_RESULT([yes])],
  [AC_MSG_ERROR([tcl library linkage failed.])]
  )
 
  LIBS=$TEMP_LIBS
],
[
  AC_MSG_ERROR([TCE requires a path to the header files of tcl library. Either install the header files or provide their location.])
])

AM_CONDITIONAL(HAVE_TCL, test x$TCL = xtrue)

LDFLAGS="$TEMP_LDFLAGS"
CPPFLAGS="$TEMP_CPPFLAGS"

############################################################################
#
# TCE uses Xerces package. If Xerces is not installed in default directory
# (/usr or /usr/local) configure must be informed about its location.
# Example: ./configure --with-xerces=/foo/bar/xerces informs that Xerces
# can be found from /foo/bar/xerces. LDFLAGS and CPPFLAGS are temporarily
# changed when testing Xerces. XERCES_INCLUDES is a variable where
# the location of Xerces header files is stored. This variable is used in
# the Makefile.am that needs to use Xerces headers. Same applies to
# XERCES_LIBDIR. 
#
############################################################################
AC_ARG_WITH(xerces,
[AS_HELP_STRING([--with-xerces],[absolute path where Xerces can be found])],
[xerces="${withval}" 
AC_SUBST([XERCES_INCLUDES], ["-I$xerces/include"] )
AC_SUBST([XERCES_LIBDIR], ["-L$xerces/lib"])
],
[xerces=""]
)

TEMP_CPPFLAGS="$CPPFLAGS"
TEMP_LDFLAGS="$LDFLAGS"
TEMP_LIBS="$LIBS"
if test -n "$xerces"; then
  LDFLAGS="$LDFLAGS -L$xerces/lib"
  CPPFLAGS="$CPPFLAGS -I$xerces/include"
fi

LIBS="$LIBS -lxerces-c $PTHREAD_LIBS"
AC_LANG(C++)
AC_MSG_CHECKING([whether xerces-c library is available to the linker])
AC_LINK_IFELSE(
[
AC_LANG_PROGRAM(
[[
#include <xercesc/util/PlatformUtils.hpp>
][
#if _XERCES_VERSION >= 20200
][
XERCES_CPP_NAMESPACE_USE
][
#endif
]], 
[XMLPlatformUtils::Initialize();])], 
[
  AC_MSG_RESULT([yes])
  AC_SUBST([XERCES_LIBS], ["-lxerces-c $PTHREAD_LIBS"])
],
[AC_MSG_ERROR([xerces-c library linkage failed.])])
LIBS="$TEMP_LIBS"
LDFLAGS="$TEMP_LDFLAGS"
CPPFLAGS="$TEMP_CPPFLAGS"

# PREFIX is the installation directory for TCE. If it is not given,
# then it is set to "/usr/local". Otherwise it is set to user given
# prefix. Result is written to config.h.
if test x"$prefix" = xNONE; then
  prefix=/usr/local
  AC_DEFINE([TCE_INSTALLATION_ROOT],["/usr/local"],[The installation directory])
  AC_DEFINE([CONFIGDIR], ["/etc/tce"], [Directory for configurations])
else
  AC_DEFINE_UNQUOTED([TCE_INSTALLATION_ROOT],["$prefix"],
	             [The installation directory])
  AC_DEFINE_UNQUOTED([CONFIGDIR], ["$prefix/share/tce/etc"],
	             [Directory for configurations])
fi

# Paths for bitmaps, data...
#CURDIR="$(pwd)"
AC_DEFINE_UNQUOTED([TCE_SRC_ROOT], ["`cd $srcdir && pwd`"], [Root for the project])
AC_DEFINE_UNQUOTED([TCE_BLD_ROOT], ["`pwd`"], [Build directory for the project])
#AC_DEFINE_UNQUOTED([BITMAPSDIR], ["$CURDIR/bitmaps"],
#		   [Directory for bitmaps])
#AC_DEFINE_UNQUOTED([DATADIR], ["$CURDIR/data"],
#		   [Directory for data])

# Checking for libedit library.
AC_ARG_WITH(editline,
[AS_HELP_STRING([--with-editline],[absolute path where editline can be found])],
[editline="${withval}" 
AC_SUBST([EDITLINE_INCLUDES], ["-I$editline/include"] )
AC_SUBST([EDITLINE_LIBDIR], ["-L$editline/lib"])
], 
[editline=""]
)

TEMP_CPPFLAGS="$CPPFLAGS"
TEMP_LDFLAGS="$LDFLAGS"
if test -n "$editline"; then
   CPPFLAGS="$CPPFLAGS $EDITLINE_INCLUDES"
   LDFLAGS="$LDFLAGS $EDITLINE_LIBDIR"
fi

TEMP_LIBS="$LIBS"
AC_SEARCH_LIBS([el_init], [edit], [], [], [])
AC_MSG_CHECKING([whether editline library is available])
AC_RUN_IFELSE(
[AC_LANG_PROGRAM(
[[
extern "C" {
#include <histedit.h>
}
]],
[[
history_init()
]])], 
[
  AC_MSG_RESULT([yes])
  AC_DEFINE([EDITLINE], [1], [Defines whether editline is found or not])
  EDITLINE=true
  AC_SUBST([EDITLINE_LD_FLAGS], ["-ledit $EDITLINE_LIBDIR"])

],
[
# check if libedit needs termcap in this system
  AC_SEARCH_LIBS([el_init], [edit], [], [], [-ltermcap])
  AC_RUN_IFELSE(
    [AC_LANG_PROGRAM(
[[
extern "C" {
#include <histedit.h>
}
]],
[[
history_init()
]])], 
    [
      AC_MSG_RESULT([yes])
      AC_DEFINE([EDITLINE], [1], [Defines whether editline is found or not])
      EDITLINE=true
      AC_SUBST([EDITLINE_LD_FLAGS], ["-ledit -ltermcap"])

    ],
    [
      AC_MSG_RESULT([no])
      EDITLINE=false
    ])
])
LIBS="$TEMP_LIBS"
CPPFLAGS="$TEMP_CPPFLAGS"
LDFLAGS="$TEMP_LDFLAGS"

AM_CONDITIONAL([HAVE_EDITLINE], test x$EDITLINE = xtrue)

AM_CONDITIONAL([RUN_INTERPRETER_TESTS], 
	       [test x$TCL = xtrue && test x$EDITLINE = xtrue])


######################################
#
# Checking the version of sqlite.
#
######################################

# The location of sqlite can be defined with --with-sqlite
AC_ARG_WITH(sqlite3,
[AS_HELP_STRING([--with-sqlite3],[absolute path where sqlite3 can be found])],
[sqlite3="${withval}" 
AC_SUBST([SQLITE_INCLUDES], ["-I$sqlite3/include"] )
AC_SUBST([SQLITE_LIBDIR], ["-L$sqlite3/lib"])
], 
[sqlite3=""]
)

TEMP_CPPFLAGS="$CPPFLAGS"
TEMP_LDFLAGS="$LDFLAGS"
if test -n "$sqlite3"; then
   CPPFLAGS="$CPPFLAGS $SQLITE_INCLUDES"
   TCE_LDFLAGS="$TCE_LDFLAGS $SQLITE_LIBDIR"
fi

TEMP_LIBS="$LIBS"
AC_LANG(C)
AC_SEARCH_LIBS([sqlite3_step], [sqlite3], [], 
[AC_MSG_RESULT([sqlite3 version <= 3.0.0 Install new version.])], [])
AC_MSG_CHECKING([that sqlite3 is available to linker])
AC_RUN_IFELSE(
[AC_LANG_PROGRAM(
[[
#include <sqlite3.h>
#if SQLITE_VERSION_NUMBER < 3002000
#error Too old SQLite3
#endif
]],
[]
)], 
[
  AC_MSG_RESULT([yes])
  AC_SUBST([SQLITE_LD_FLAGS], ["-lsqlite3 $SQLITE_LIBDIR"])
  SQLITE3=true
],
[
  AC_MSG_RESULT([no])
  AC_MSG_ERROR([sqlite version must be >= 3.2.0])
])
CPPFLAGS="$TEMP_CPPFLAGS"
LDFLAGS="$TEMP_LDFLAGS"
LIBS="$TEMP_LIBS"

AM_CONDITIONAL([HAVE_SQLITE], test x$SQLITE3 = xtrue)

#################################################################
#
# Testing whether -ldl is needed or not to compile PluginTools.
#
#################################################################
AC_LANG(C++)
AC_MSG_CHECKING([whether dl library is needed])
AC_LINK_IFELSE(
[
AC_LANG_PROGRAM(
[
#include <dlfcn.h>
], 
[
dlerror();
])], 
[
  AC_MSG_RESULT([no])
],
[
  AC_MSG_RESULT([yes])
  AC_SUBST([DL_FLAGS], ["-ldl"])
])

###########################
#
# CHECKS FOR HEADER FILES 
#
###########################

# Checks for dirent.h, sys/ndir.h, sys/dir.h, and ndir.h.
# The first one that is found and defines DIR, define
# following MACRO: HAVE_DIRENT_H, HAVE_SYS_NDIR_H,
# HAVE_SYS_DIR_H, or HAVE_NDIR_H.
AC_HEADER_DIRENT

AC_HEADER_SYS_WAIT

# Define STDC_HEADERS if the system has Ansi C header files.
# Checks especially for stdlib.h, stdarg.h, string.h, and 
# float.h.
AC_HEADER_STDC

##########################################################
#
# CHECKS FOR TYPEDEFS, STRUCTURES, AND COMPILER FEATURES 
#
##########################################################

# If the C compiler does not fully support the Ansi C 
# const qualifier, define const to be empty.
AC_C_CONST

# Define SIZEOF_FLOAT_ to be the size of float in bytes.
# Define SIZEOF_DOUBLE_ to be the size of double in bytes.
# Define SIZEOF_INT to be the size of int in bytes.
# Define SIZEOF_SHORT to be the size of short in bytes.
# Define SIZEOF_CHAR to be the size of char in bytes. 
AC_CHECK_SIZEOF(float)
AC_CHECK_SIZEOF(double)
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(short)
AC_CHECK_SIZEOF(char)

# If words in the host machine are stored with the most significant byte
# first, define WORDS_BIGENDIAN
AC_C_BIGENDIAN

# Define the target TTA processor byte order (endianess).
# --enable-bigendian=yes : the target machine stores the most significant
# byte of a word at the lowest address
# --enable-bigendian=no : the target machine stores the least significant
# byte of a word at the lowest address
# Default target machine byte order is most significant byte first.
AC_ARG_ENABLE(bigendian,
[AS_HELP_STRING([--enable-bigendian],[target machine uses bigendian])],
[ case "${enableval}" in
  yes) 
    bigendian=true 
    ;;
  no) 
    bigendian=false 
    ;;
  *) 
    AC_MSG_ERROR(bad value ${enableval for --enable-bigendian}) 
    ;;
  esac], 
  [bigendian=true]
)

# If target machine is big-endian, define TARGET_WORDS_BIGENDIAN.
if test x"$bigendian" = xtrue; then
   AC_DEFINE(TARGET_WORDS_BIGENDIAN, 1, 
   [defines whether the target processor has big-endian byte order])
fi


#################################################################
#
# Determine whether the C++11 language standard is enabled or not.
#
#################################################################

# Defines the lowest required boost version.
MIN_BOOST_VERSION=1.41.0

AC_LANG(C++)

cxx11=true

# Check that the compiler supports C++11 mode.
AX_CXX_COMPILE_STDCXX_11([noext], [mandatory])

# AX_CXX_COMPILE_STDCXX_11 macro sets CXXFLAGS to include -std=c++0x or
# -std=c++11, check which one and set other flags accordingly.
define_cxx0x=false
for flag in $CXXFLAGS; do
    if test x"$flag" = x-std=c++0x; then
       define_cxx0x=true
       break
    fi
done
   
# Set the flags to use -std=c++0x or -std=c++11.
if test x"$define_cxx0x" = xtrue; then
   AC_DEFINE(HAVE_CXX0X, [], [Using C++0x language standard switch.])
   CXXFLAGS="$CXXFLAGS -std=c++0x"
else
   AC_DEFINE(HAVE_CXX11, [], [Using C++11 language standard switch.])
   CXXFLAGS="$CXXFLAGS -std=c++11"
fi


######################################
#
# Check boost libraries
#
######################################
MIN_BOOST_VERSION=1.48.0

AX_BOOST_BASE([$MIN_BOOST_VERSION])
if test -z "$BOOST_LDFLAGS"
then
AC_MSG_ERROR(
[boost library not found. Install it or use --with-boost switch])
fi

AX_BOOST_FILESYSTEM
if test -z "$BOOST_FILESYSTEM_LIB"
then
AC_MSG_ERROR(
[boost_filesystem library not found. Install it or use --with-boost-filesystem switch])
fi
#boost::system is not needed for anything AFAIK, works without...
AX_BOOST_SYSTEM
if test -z "$BOOST_SYSTEM_LIB"
then
AC_MSG_NOTICE(
[boost_filesystem library not found. This may be problem if boost 1.35 or later is used. Install it or use --with-boost-system switch])
fi

AX_BOOST_REGEX
if test -z "$BOOST_REGEX_LIB"
then
AC_MSG_ERROR(
[boost_regex library not found. Install it or use --with-boost-regex switch])
fi

AX_BOOST_THREAD
if test -z "$BOOST_THREAD_LIB"
then
AC_MSG_ERROR(
[boost_thread library not found. Install it or use --with-boost-thread switch])
fi


################################
#
# CHECKS FOR LIBRARY FUNCTIONS 
#
################################

# In case 'distro' file exists, this is a packaged tar ball
# release. Apply "distributed version" modifications.
if test -e $srcdir/distro
then
DISTRIBUTED_VERSION_DEFAULT=true
else
DISTRIBUTED_VERSION_DEFAULT=false
fi
DISTRIBUTED_VERSION=$DISTRIBUTED_VERSION_DEFAULT

# Enable DISTRIBUTED_VERSION
AC_ARG_ENABLE(distributed,
              [AS_HELP_STRING([--enable-distributed],[Build TCE as distributed version])],
[ case "${enableval}" in
  yes) 
  AC_DEFINE(DISTRIBUTED_VERSION, true,
            [This macro is defined to 'true'  in case the build is going to be \
             distributed to be used in non-developer systems. This results in debug logs \
             etc. being printed to different files, search paths do not include the TCE \
             source directory, etc.])
  DISTRIBUTED_VERSION=true
    ;;
  no) 
  AC_DEFINE(DISTRIBUTED_VERSION, false,
            [This macro is defined to 'true'  in case the build is going to be \
             distributed to be used in non-developer systems. This results in debug logs \
             etc. being printed to different files, search paths do not include the TCE \
             source directory, etc.])
  DISTRIBUTED_VERSION=false
    ;;
  *) 
    AC_MSG_ERROR(bad value ${enableval for --enable-distributed}) 
    ;;
  esac], 
  [AC_DEFINE_UNQUOTED(DISTRIBUTED_VERSION, [$DISTRIBUTED_VERSION_DEFAULT],
            [This macro is defined to 'true'  in case the build is going to be \
             distributed to be used in non-developer systems. This results in debug logs \
             etc. being printed to different files, search paths do not include the TCE \
             source directory, etc.])]

)
AM_CONDITIONAL(DISTRIBUTED_VERSION, test x$DISTRIBUTED_VERSION == xtrue)

# set variables, which were used by old system...
AC_SUBST([BOOST_INCLUDES], ["$BOOST_CPPFLAGS"] )
AC_SUBST([BOOST_LIBDIR], ["$BOOST_LDFLAGS"])

# Add all include paths to CPPFLAGS to make sure, that headerfiles are found
CPPFLAGS="$CPPFLAGS $SQLITE_INCLUDES $BOOST_INCLUDES \
$EDITLINE_INCLUDES $XERCES_INCLUDES $TCL_INCLUDES $GUI_INCLUDES"
LDFLAGS="$LDFLAGS $PTHREAD_LIBS $LIBS"
CFLAGS="$CFLAGS $PTHREAD_CFLAGS"

BOOST_LDFLAGS="$BOOST_LDFLAGS $BOOST_REGEX_LIB $BOOST_THREAD_LIB \
$BOOST_FILESYSTEM_LIB $BOOST_SYSTEM_LIB"

if test -d test
then
# Write out a file with flags for unit test Makefiles.
FILENAME=test/Makefile_configure_settings
echo "TCL_LD_FLAGS=$TCL_LD_FLAGS $TCL_LIBDIR 

EDITLINE_LD_FLAGS=$EDITLINE_LD_FLAGS
EDITLINE_INCLUDES=$EDITLINE_INCLUDES

BOOST_INCLUDES=$BOOST_INCLUDES
BOOST_LDFLAGS=$BOOST_LDFLAGS

SQLITE_INCLUDES=$SQLITE_INCLUDES
SQLITE_LD_FLAGS=$SQLITE_LD_FLAGS

XERCES_LDFLAGS=$XERCES_LIBDIR $XERCES_LIBS

GUI_LDFLAGS=$GUI_LIBS 

SHARED_CXX_FLAGS=$SHARED_CXX_FLAGS
LIBRARY_SUFFIX=$LIBRARY_SUFFIX
DL_FLAGS=$DL_FLAGS

CPPFLAGS=$CPPFLAGS 
LLVM_CPPFLAGS=$LLVM_CPPFLAGS

DYNAMIC_FLAG=$DYNAMIC_FLAG

CXX=$CXX
CPP=$CPP
CC=$CC

LDFLAGS="$LDFLAGS $EDITLINE_LD_FLAGS $BOOST_LDFLAGS $SQLITE_LD_FLAGS $XERCES_LIBDIR $XERCES_LIBS $GUI_LIBS $TCL_LIBDIR $TCL_LD_FLAGS $LLVM_LDFLAGS $DL_FLAGS"

" > $FILENAME

fi


TCE_LDFLAGS="$LDFLAGS $EDITLINE_LD_FLAGS $BOOST_LDFLAGS $SQLITE_LD_FLAGS $XERCES_LIBDIR $XERCES_LIBS $GUI_LIBS $TCL_LIBDIR $TCL_LD_FLAGS $LLVM_LDFLAGS $DL_FLAGS"

AC_SUBST([TCE_LDFLAGS], ["$TCE_LDFLAGS"])

AC_DEFINE_UNQUOTED([CONFIGURE_CPPFLAGS], ["$CPPFLAGS"],
                   [CPPFLAGS used during configuration of TCE])

AC_DEFINE_UNQUOTED([CONFIGURE_LDFLAGS], ["$LDFLAGS $TCE_LDFLAGS"],
                   [LDFLAGS used during configuration of TCE])


# Make AC_OUTPUT to create each file listed here.
AC_CONFIG_FILES([
  Makefile
  tce-config
  src/Makefile
  src/base/Makefile
  src/base/tpef/Makefile
  src/base/mach/Makefile 
  src/base/bem/Makefile
  src/base/idf/Makefile
  src/base/osal/Makefile
  src/base/umach/Makefile
  src/base/memory/Makefile
  src/base/program/Makefile
  src/base/Graph/Makefile
  src/tools/Makefile
  doc/Makefile
  src/bintools/Makefile
  src/bintools/TPEFDumper/Makefile
  src/bintools/PIG/Makefile
  src/bintools/DictionaryTool/Makefile
  src/bintools/BEMGenerator/Makefile
  src/bintools/BEMViewer/Makefile
  src/bintools/Assembler/Makefile
  src/bintools/Disassembler/Makefile
  src/applibs/Scheduler/Selector/Makefile
  src/applibs/Scheduler/Algorithms/Makefile
  src/codesign/Makefile
  src/codesign/osal/Makefile
  src/codesign/osal/OSALBuilder/Makefile
  src/codesign/osal/OSALTester/Makefile
  src/codesign/osal/OSEd/Makefile
  src/codesign/ttasim/Makefile
  src/codesign/Proxim/Makefile
  src/codesign/Explorer/Makefile
  src/procgen/Makefile
  src/procgen/ProDe/Makefile
  data/bitmaps/Makefile
  data/Makefile
  conf/Makefile
  src/applibs/Makefile
  src/applibs/Interpreter/Makefile
  src/applibs/Simulator/Makefile
  src/applibs/wxToolkit/Makefile
  src/applibs/osal/Makefile
  src/applibs/TraceDB/Makefile
  src/applibs/bem/Makefile
  src/applibs/mach/Makefile
  src/applibs/idf/Makefile
  src/applibs/PIG/Makefile
  src/applibs/wxToolkit/MachineWindow/Makefile
  src/applibs/wxToolkit/GUIOptions/Makefile
  src/applibs/Assembler/Makefile
  src/applibs/hdb/Makefile
  src/applibs/dsdb/Makefile
  src/applibs/Estimator/Makefile
  src/applibs/ProGe/Makefile
  src/applibs/EPSGenerator/Makefile
  src/applibs/costdb/Makefile
  src/applibs/program/Makefile
  src/codesign/Estimator/Makefile
  src/procgen/HDB/Makefile 
  src/procgen/ProGe/Makefile
  src/procgen/HDBEditor/Makefile
  src/procgen/MachInfo/Makefile
  src/applibs/Scheduler/Makefile
  src/applibs/Scheduler/ResourceModel/Makefile
  src/applibs/Scheduler/ResourceManager/Makefile
  src/applibs/FSA/Makefile
  src/applibs/Explorer/Makefile
  scheduler/Makefile
  opset/Makefile
  opset/base/Makefile
  src/applibs/Scheduler/ProgramRepresentations/Makefile
  src/applibs/Scheduler/ProgramRepresentations/PDG/Makefile
  src/applibs/Scheduler/ProgramRepresentations/CFG/Makefile
  src/applibs/Scheduler/ProgramRepresentations/CDG/Makefile
  src/applibs/Scheduler/ProgramRepresentations/DDG/Makefile
  hdb/Makefile
  compressors/Makefile
  icdecoder_plugins/Makefile
  scripts/Makefile
  manual/Makefile
  cost_estimator_plugins/Makefile
  cost_estimator_plugins/rf/Makefile
  cost_estimator_plugins/fu/Makefile
  explorer/Makefile
  src/applibs/LLVMBackend/Makefile
  src/applibs/LLVMBackend/passes/Makefile
  src/bintools/Compiler/Makefile
  src/bintools/Compiler/tceopgen/Makefile
  src/bintools/Compiler/llvm-tce/Makefile
  src/applibs/ImplementationTester/Makefile
  src/applibs/PlatformIntegrator/Makefile
  scheduler/testbench/Makefile
  scheduler/testbench/Operations/Makefile
  bclib/Makefile
  bclib/lwpr/Makefile
  bclib/saocl/Makefile 
  bclib/cpp/Makefile 
  bclib/include/Makefile
  bclib/include/CL/Makefile
])

## The test Makefile generation will be removed automatically 
## from the released .tar.gz with 'make_dist.sh'.
## REMOVE FROM DIST START
AC_CONFIG_FILES([
  test/Makefile
  test/base/Makefile
  test/procgen/Makefile
  test/applibs/Makefile
  test/applibs/wxToolkit/Makefile
  test/applibs/Scheduler/Makefile
  test/applibs/Scheduler/ProgramRepresentations/Makefile
])
## REMOVE FROM DIST END

# scripts which need to be filled with BOOST_INCLUDES and other variables...
AC_CONFIG_FILES([src/codesign/Explorer/buildexplorerplugin], 
                [chmod +x src/codesign/Explorer/buildexplorerplugin])

AC_CONFIG_FILES([src/codesign/Estimator/buildestimatorplugin], 
                [chmod +x src/codesign/Estimator/buildestimatorplugin])

AC_CONFIG_FILES([src/bintools/PIG/buildcompressor], 
                [chmod +x src/bintools/PIG/buildcompressor])

AC_CONFIG_FILES([src/procgen/ProGe/buildicdecoderplugin], 
                [chmod +x src/procgen/ProGe/buildicdecoderplugin])

AC_CONFIG_FILES([src/applibs/LLVMBackend/passes/buildllvmpass], 
                [chmod +x src/applibs/LLVMBackend/passes/buildllvmpass])

AC_CONFIG_FILES([src/bintools/Compiler/tcecc], 
                [chmod +x src/bintools/Compiler/tcecc])

# Configure newlib as well
m4_pattern_allow([^AS_FOR_TARGET$])

AC_CONFIG_COMMANDS_POST ([
echo "=== Configuring newlib =====";
# make srcdir absolute
builddirectory=$PWD
cd $srcdir;
srcdir=$PWD;
cd $builddirectory;
# create builddir (if necessary)
mkdir -p newlib-1.17.0; 
cd newlib-1.17.0;
#echo RANLIB_FOR_TARGET=llvm-ranlib \
#NM_FOR_TARGET=llvm-nm AR_FOR_TARGET=llvm-ar \
#AS_FOR_TARGET=llvm-as LD_FOR_TARGET=llvm-ld \
#CFLAGS=-O2 \
#CXX_FOR_TARGET=`pwd`/../src/bintools/Compiler/tcecc \
#CC_FOR_TARGET=`pwd`/../src/bintools/Compiler/tcecc \
#$srcdir/newlib-1.17.0/configure --prefix=$prefix --target=tce-llvm --disable-multilib --disable-libgloss ;
RANLIB_FOR_TARGET=ranlib \
NM_FOR_TARGET=nm AR_FOR_TARGET=ar \
AS_FOR_TARGET=as LD_FOR_TARGET=ld \
CFLAGS_FOR_TARGET="-O2 -fno-builtin -Wno-unknown-warning-option \
-Wno-literal-range -Wno-pointer-sign -Wno-return-type \
-Wno-empty-body -Wno-dangling-else -Wno-implicit-function-declaration -Wno-unused-value" \
CXX_FOR_TARGET=`pwd`/../src/bintools/Compiler/tcecc \
CC_FOR_TARGET=`pwd`/../src/bintools/Compiler/tcecc \
$srcdir/newlib-1.17.0/configure --prefix=$prefix --target=tce-llvm --disable-multilib --disable-libgloss \
2>&1 | egrep -v "to force reconfigure";
])

# Generate config.status and launch it. config.status then
# performs all configuration actions.
AC_OUTPUT

# Print statistics about which libraries are found.

echo "***************************************"
echo "Found xerces-c library."
echo "Found boost library >= v.$MIN_BOOST_VERSION"
echo "Found sqlite3 library."

if test x"$LATEX" = xyes;
then
  echo "Found latex."
else
  echo "Didn't find latex. Manual pages will not be created."
fi

if test x"$LATEX2HTML" = xyes;
then
  echo "Found latex2html."
else
  echo "Didn't find latex2html. Manual pages will not be created."
fi

if test x"$DO_WX_COMPILE" = xtrue;
then
  echo "Found wxWidgets library."
else
  echo "wxWidgets library not found. Tools using wxWidgets cannot be build
(ProDe, OSEd, Proxim)."
fi

if test x"$TCL" = xtrue;
then
  echo "Found tcl library >= v.8.0"

  case "$TCL_VERSION" in
     8.5*)
     echo "WARNING! Your TCL version $TCL_VERSION might be buggy. "
     echo "If you have problems with Proxim, downgrade to 8.4 or older."
   ;;
  esac
else
  echo "tcl library not found. TclInterpreter cannot be build."
fi

if test x"$EDITLINE" = xtrue;
then
  echo "Found libedit. EditLineReader will be used as LineReader."
else
  echo "libedit not found. BaseLineReader will be used as LineReader."
  echo "NOTE: libedit might require 'libtermcap' in some systems."
fi

if test x"$LLVM_VERSION" = x
then
  echo "NOTE! Supported LLVM version not found. Compiling C programs is disabled."
else
  echo "Found LLVM version $LLVM_VERSION"
fi

#  else
#     
#  fi

echo "***************************************"

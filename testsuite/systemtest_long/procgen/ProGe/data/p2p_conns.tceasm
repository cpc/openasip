CODE ;

... , ... , ... , ... , ... , ... , ... , ... , ... , ...  , ... [IMM.0=1];
... , ... , ... , ... , ... , ... , ... , ... , ... , IMM.0 -> TB.in1t.locktest, ... ;
... , ... , ... , ... , ... , ... , ... , ... , ... , ...  , ... [IMM.0=0];
... , ... , ... , ... , ... , ... , ... , ... , ... , IMM.0 -> TB.in1t.locktest, ... ;
1 -> ALU.in1t.add , ... , ... , ... , ... , ... , 0 -> ALU.in2, ... , ... , ...  , ... ;

... , ... , ... , ... , ... , ... , ... , ... , ALU.out1 -> TB.in1t.locktest, ...  , ... ;
16 -> ALU.in1t.add, ... , ... , ... , ... , ... , 15 -> ALU.in2, ... , ... , ...  , ... ;
0 -> LSU.in1t.stw , ... , ... , ALU.out1 -> LSU.in2, ... , ... , ... , ... , ... , ...  , ... ;
4 -> LSU.in1t.stw , ... , ... , ... , ... , ... , ... , 99 -> LSU.in2 , ... , ...  , ... ;
0 -> LSU.in1t.ldw, ... , ... , ... , ... , ... , ... , ... , ... , ...  , ... ;
... , ... , ... , ... , ... , ... , ... , ... , ... , ...  , ... ;
... , ... , ... , ... , ... , ... , ... , ... , ... , ...  , ... ;
1 -> ALU.in1t.add , ... , ... , ... , ... , LSU.out1 -> ALU.in2 , ... , ... , ... , ...  , ... ;
... , ALU.out1 -> RF.1 , ... , ... , ... , ... , ... , ... , ... , ...  , ... ;
... , ... , ... , ... , ... , ... , ... , ... , ... , ...  , ... ;


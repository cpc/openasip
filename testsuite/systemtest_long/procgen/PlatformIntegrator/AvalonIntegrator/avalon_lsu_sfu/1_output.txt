Component file contents:
module properties:
13
design files:
26
interfaces:
add_interface clock_reset clock end
add_interface fu_avalon_sfu_avalon_master avalon start
add_interface fu_avalon_sfu_avalon_masterinterrupt_recv interrupt start
add_interface fu_lsu_avalon_master avalon start
add_interface fu_lsu_avalon_masterinterrupt_recv interrupt start
add_interface conduit_interface conduit end
library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.std_logic_arith.all;
use work.tce_util.all;
use work.tta_avalon_lsu_sfu_globals.all;
use work.tta_avalon_lsu_sfu_imem_mau.all;
use work.tta_avalon_lsu_sfu_toplevel_params.all;

entity tta_avalon_lsu_sfu_toplevel is

  generic (
    dev_family_g : string := "Stratix II";
    onchip_imem_0_init_file_g : string := "prog.mif");

  port (
    clk : in std_logic;
    rstx : in std_logic;
    fu_lsu_avalon_d_address : out std_logic_vector(fu_lsu_a_addrw_g-1 downto 0);
    fu_lsu_avalon_d_byteenable : out std_logic_vector(fu_lsu_a_byteenable_g-1 downto 0);
    fu_lsu_avalon_d_read : out std_logic;
    fu_lsu_avalon_d_write : out std_logic;
    fu_lsu_avalon_d_irq : in std_logic_vector(fu_lsu_a_irqw_g-1 downto 0);
    fu_lsu_avalon_d_readdata : in std_logic_vector(fu_lsu_a_dataw_g-1 downto 0);
    fu_lsu_avalon_d_waitrequest : in std_logic;
    fu_lsu_avalon_d_writedata : out std_logic_vector(fu_lsu_a_dataw_g-1 downto 0);
    fu_leds_STRATIXII_LED : out std_logic_vector(fu_leds_led_count-1 downto 0);
    fu_avalon_sfu_avalon_d_address : out std_logic_vector(fu_avalon_sfu_a_addrw_g-1 downto 0);
    fu_avalon_sfu_avalon_d_byteenable : out std_logic_vector(fu_avalon_sfu_a_byteenable_g-1 downto 0);
    fu_avalon_sfu_avalon_d_read : out std_logic;
    fu_avalon_sfu_avalon_d_write : out std_logic;
    fu_avalon_sfu_avalon_d_writedata : out std_logic_vector(fu_avalon_sfu_a_dataw_g-1 downto 0);
    fu_avalon_sfu_avalon_d_irq : in std_logic_vector(fu_avalon_sfu_a_irqw_g-1 downto 0);
    fu_avalon_sfu_avalon_d_readdata : in std_logic_vector(fu_avalon_sfu_a_dataw_g-1 downto 0);
    fu_avalon_sfu_avalon_d_waitrequest : in std_logic);

end tta_avalon_lsu_sfu_toplevel;

architecture structural of tta_avalon_lsu_sfu_toplevel is


  component tta_avalon_lsu_sfu
    port (
      clk : in std_logic;
      rstx : in std_logic;
      busy : in std_logic;
      imem_en_x : out std_logic;
      imem_addr : out std_logic_vector(IMEMADDRWIDTH-1 downto 0);
      imem_data : in std_logic_vector(IMEMWIDTHINMAUS*IMEMMAUWIDTH-1 downto 0);
      fu_lsu_avalon_d_address : out std_logic_vector(fu_lsu_a_addrw_g-1 downto 0);
      fu_lsu_avalon_d_byteenable : out std_logic_vector(fu_lsu_a_byteenable_g-1 downto 0);
      fu_lsu_avalon_d_read : out std_logic_vector(1-1 downto 0);
      fu_lsu_avalon_d_write : out std_logic_vector(1-1 downto 0);
      fu_lsu_avalon_d_irq : in std_logic_vector(fu_lsu_a_irqw_g-1 downto 0);
      fu_lsu_avalon_d_readdata : in std_logic_vector(fu_lsu_a_dataw_g-1 downto 0);
      fu_lsu_avalon_d_waitrequest : in std_logic_vector(1-1 downto 0);
      fu_lsu_avalon_d_writedata : out std_logic_vector(fu_lsu_a_dataw_g-1 downto 0);
      fu_leds_STRATIXII_LED : out std_logic_vector(fu_leds_led_count-1 downto 0);
      fu_avalon_sfu_avalon_d_address : out std_logic_vector(fu_avalon_sfu_a_addrw_g-1 downto 0);
      fu_avalon_sfu_avalon_d_byteenable : out std_logic_vector(fu_avalon_sfu_a_byteenable_g-1 downto 0);
      fu_avalon_sfu_avalon_d_read : out std_logic_vector(1-1 downto 0);
      fu_avalon_sfu_avalon_d_write : out std_logic_vector(1-1 downto 0);
      fu_avalon_sfu_avalon_d_writedata : out std_logic_vector(fu_avalon_sfu_a_dataw_g-1 downto 0);
      fu_avalon_sfu_avalon_d_irq : in std_logic_vector(fu_avalon_sfu_a_irqw_g-1 downto 0);
      fu_avalon_sfu_avalon_d_readdata : in std_logic_vector(fu_avalon_sfu_a_dataw_g-1 downto 0);
      fu_avalon_sfu_avalon_d_waitrequest : in std_logic_vector(1-1 downto 0));
  end component;

  component tta_avalon_lsu_sfu_altera_onchip_rom_comp
    generic (
      dev_family_g : string;
      init_file_g : string;
      addrw_g : integer;
      dataw_g : integer);
    port (
      clock : in std_logic;
      address : in std_logic_vector(IMEMADDRWIDTH-1 downto 0);
      q : out std_logic_vector(IMEMWIDTHINMAUS*IMEMMAUWIDTH-1 downto 0);
      clken : in std_logic);
  end component;

  component util_inverter
    port (
      data_in : in std_logic;
      data_out : out std_logic);
  end component;


begin

  core_busy_wire <= '0';
  imem_en_x_util_inverter_data_in_wire <= core_imem_en_x_wire;
  onchip_imem_0_address_wire <= core_imem_addr_wire;
  core_imem_data_wire <= onchip_imem_0_q_wire;
  onchip_imem_0_clken_wire <= imem_en_x_util_inverter_data_out_wire;

  core : tta_avalon_lsu_sfu
    port map (
      clk => clk,
      rstx => rstx,
      busy => core_busy_wire,
      imem_en_x => core_imem_en_x_wire,
      imem_addr => core_imem_addr_wire,
      imem_data => core_imem_data_wire,
      fu_lsu_avalon_d_address => fu_lsu_avalon_d_address,
      fu_lsu_avalon_d_byteenable => fu_lsu_avalon_d_byteenable,
      fu_lsu_avalon_d_read(0) => fu_lsu_avalon_d_read,
      fu_lsu_avalon_d_write(0) => fu_lsu_avalon_d_write,
      fu_lsu_avalon_d_irq => fu_lsu_avalon_d_irq,
      fu_lsu_avalon_d_readdata => fu_lsu_avalon_d_readdata,
      fu_lsu_avalon_d_waitrequest(0) => fu_lsu_avalon_d_waitrequest,
      fu_lsu_avalon_d_writedata => fu_lsu_avalon_d_writedata,
      fu_leds_STRATIXII_LED => fu_leds_STRATIXII_LED,
      fu_avalon_sfu_avalon_d_address => fu_avalon_sfu_avalon_d_address,
      fu_avalon_sfu_avalon_d_byteenable => fu_avalon_sfu_avalon_d_byteenable,
      fu_avalon_sfu_avalon_d_read(0) => fu_avalon_sfu_avalon_d_read,
      fu_avalon_sfu_avalon_d_write(0) => fu_avalon_sfu_avalon_d_write,
      fu_avalon_sfu_avalon_d_writedata => fu_avalon_sfu_avalon_d_writedata,
      fu_avalon_sfu_avalon_d_irq => fu_avalon_sfu_avalon_d_irq,
      fu_avalon_sfu_avalon_d_readdata => fu_avalon_sfu_avalon_d_readdata,
      fu_avalon_sfu_avalon_d_waitrequest(0) => fu_avalon_sfu_avalon_d_waitrequest);

  onchip_imem_0 : tta_avalon_lsu_sfu_altera_onchip_rom_comp
    generic map (
      dev_family_g => dev_family_g,
      init_file_g => onchip_imem_0_init_file_g,
      addrw_g => IMEMADDRWIDTH,
      dataw_g => IMEMWIDTHINMAUS*IMEMMAUWIDTH)
    port map (
      clock => clk,
      address => onchip_imem_0_address_wire,
      q => onchip_imem_0_q_wire,
      clken => onchip_imem_0_clken_wire);

  imem_en_x_util_inverter : util_inverter
    port map (
      data_in => imem_en_x_util_inverter_data_in_wire,
      data_out => imem_en_x_util_inverter_data_out_wire);

end structural;
